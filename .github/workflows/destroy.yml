# This is a basic workflow that is manually triggered

name: Manual Destroy

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Identify yourself, human!'
        # Default value if no value is explicitly provided
        default: 'Meatbag'
        # Input has to be provided for the workflow to run
        required: true

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
 
    # Setup Terraform variables
    - name: Setup Terraform variables
      id: vars
      run: |-
        cat > terraform.tfvars <<EOF
        environment = "${{ fromJSON('["pr", "main"]')[github.ref == 'refs/heads/main'] }}"
        aws_access_key = "${{ secrets.AWS_ACC_KEY }}"
        aws_secret_key = "${{ secrets.AWS_SECRET_KEY }}"
        aws_vpc_id = "vpc-027a2319e371c59ae"
        EOF

    # Destroys current Terraform deployment
    - name: Terraform Destroy
      run: terraform destroy -auto-approve -input=false
